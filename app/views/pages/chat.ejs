<!DOCTYPE html>
<html lang="pt-br">

<head>
  <meta charset="UTF-8">
  <title>Chat Privado</title>
  <script src="/socket.io/socket.io.js"></script>
  <link rel="stylesheet" href="css/chat.css">  
</head>

<body>
  <!-- Lista de usuários -->
  <div id="sidebar">
    <h3>Usuários</h3>
    <ul>
      <% usuarios.forEach((u)=> { 
        if (u.id_usuario !==usuarioLogado.id) { %>
          <li>
            <a href="#" class="user-link" data-id="<%= u.id_usuario %>">
              <%= u.nome_usuario %>
            </a>
          </li>
          <% } 
         }) %>
    </ul>
  </div>

  <!-- Área de chat -->
  <div id="chat">
    <div id="messages"></div>
    <form id="form">
      <input id="input" autocomplete="off" placeholder="Digite sua mensagem..." />
      <button id="sendBtn">Enviar</button>
    </form>
  </div>

  <script>
    const socket = io();

    const usuarioLogado = <%- JSON.stringify(usuarioLogado) %>;
    let destinatarioId = null;
    // Enviar login para registrar o socket no servidor
  socket.emit("login", usuarioLogado.id);

    // Quando clicar em um usuário da lista
    document.querySelectorAll('.user-link').forEach(el => {
      el.addEventListener('click', async (e) => {
        e.preventDefault();
        destinatarioId = el.dataset.id;
        document.getElementById('messages').innerHTML = "";

        
        // remover classe marcado de todos os <li>
        document.querySelectorAll('ul li')
          .forEach(li => li.classList.remove('marcado'));
        // adicionar classe ao <li> pai do link clicado
        el.closest('li').classList.add('marcado');

        // Buscar mensagens históricas no servidor via fetch
        const res = await fetch(`/chat/mensagens/${destinatarioId}`, {
          method: "GET",
          headers: {
            "Accept": "application/json"
          }
        });
        const mensagens = await res.json();


        mensagens.forEach(m => {
          addMessage(m.conteudo, 
            m.remetente_id == usuarioLogado.id ? "me" : "other", 
            m.remetente_nome, m.data_envio);
        });
      });
    });

    // Enviar mensagem
    document.getElementById('form').addEventListener('submit', (e) => {
      e.preventDefault();
      if (!destinatarioId) return alert("Escolha um usuário para conversar");

      const input = document.getElementById('input');
      const msg = input.value.trim();
      if (msg === "") return;

      socket.emit("privateMessage", {
        remetenteId: usuarioLogado.id,
        destinatarioId: destinatarioId,
        conteudo: msg,
        data_envio: new Date(),
        remetenteNome: usuarioLogado.autenticado
      });

      addMessage(msg, "me", usuarioLogado.autenticado, new Date());
      input.value = "";
    });

    // Receber mensagem
    socket.on("privateMessage", (data) => {
      
      if (data.remetenteId == destinatarioId) {
        addMessage(data.conteudo, "other", data.remetenteNome, data.data_envio);
      }
    });

    function addMessage(text, type, nome, data) {
      const data_ = new Date(data);
      const div = document.createElement("div");
      div.className = "msg " + type;
      div.innerHTML = `<b>${nome} - ${data_.toLocaleDateString('pt-BR')}
         ${data_.toLocaleTimeString('pt-BR')} </b> <br><br>`+ text;
      document.getElementById("messages").appendChild(div);
      div.scrollIntoView();
    }
  </script>
</body>

</html>